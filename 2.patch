From 57d74ce7d6ad04443cc21231dbe79e5bf6f5e129 Mon Sep 17 00:00:00 2001
From: esterTion <lcz970@126.com>
Date: Mon, 21 Sep 2020 19:04:03 +0800
Subject: [PATCH] move team name into db

---
 .../dao/userdata/UserTeamRepository.java      | 19 ++++++++++
 .../handler/impl/GetUserTeamHandler.java      | 28 ++++++++++++--
 .../chunithm/model/userdata/UserTeam.java     | 38 +++++++++++++++++++
 .../chunithm/service/UserTeamService.java     | 31 +++++++++++++++
 .../migration/mysql/V24__chuni_user_team.sql  | 19 ++++++++++
 .../migration/sqlite/V24__chuni_user_team.sql | 10 +++++
 6 files changed, 141 insertions(+), 4 deletions(-)
 create mode 100644 src/main/java/icu/samnyan/aqua/sega/chunithm/dao/userdata/UserTeamRepository.java
 create mode 100644 src/main/java/icu/samnyan/aqua/sega/chunithm/model/userdata/UserTeam.java
 create mode 100644 src/main/java/icu/samnyan/aqua/sega/chunithm/service/UserTeamService.java
 create mode 100644 src/main/resources/db/migration/mysql/V24__chuni_user_team.sql
 create mode 100644 src/main/resources/db/migration/sqlite/V24__chuni_user_team.sql

diff --git a/src/main/java/icu/samnyan/aqua/sega/chunithm/dao/userdata/UserTeamRepository.java b/src/main/java/icu/samnyan/aqua/sega/chunithm/dao/userdata/UserTeamRepository.java
new file mode 100644
index 0000000..10d38bb
--- /dev/null
+++ b/src/main/java/icu/samnyan/aqua/sega/chunithm/dao/userdata/UserTeamRepository.java
@@ -0,0 +1,19 @@
+package icu.samnyan.aqua.sega.chunithm.dao.userdata;
+
+import icu.samnyan.aqua.sega.chunithm.model.userdata.UserData;
+import icu.samnyan.aqua.sega.chunithm.model.userdata.UserTeam;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.stereotype.Repository;
+
+import java.util.Optional;
+
+/**
+ * @author samnyan (privateamusement@protonmail.com)
+ */
+@Repository
+public interface UserTeamRepository extends JpaRepository<UserTeam, Long> {
+
+    Optional<UserTeam> findByUser(UserData user);
+
+    Optional<UserTeam> findByUser_Card_ExtId(int extId);
+}
diff --git a/src/main/java/icu/samnyan/aqua/sega/chunithm/handler/impl/GetUserTeamHandler.java b/src/main/java/icu/samnyan/aqua/sega/chunithm/handler/impl/GetUserTeamHandler.java
index 0476e88..0c32fa8 100644
--- a/src/main/java/icu/samnyan/aqua/sega/chunithm/handler/impl/GetUserTeamHandler.java
+++ b/src/main/java/icu/samnyan/aqua/sega/chunithm/handler/impl/GetUserTeamHandler.java
@@ -2,6 +2,8 @@ package icu.samnyan.aqua.sega.chunithm.handler.impl;
 
 import com.fasterxml.jackson.core.JsonProcessingException;
 import icu.samnyan.aqua.sega.chunithm.handler.BaseHandler;
+import icu.samnyan.aqua.sega.chunithm.model.userdata.UserTeam;
+import icu.samnyan.aqua.sega.chunithm.service.UserTeamService;
 import icu.samnyan.aqua.sega.util.jackson.StringMapper;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
@@ -10,6 +12,7 @@ import org.springframework.stereotype.Component;
 
 import java.util.LinkedHashMap;
 import java.util.Map;
+import java.util.Optional;
 
 /**
  * @author samnyan (privateamusement@protonmail.com)
@@ -21,20 +24,37 @@ public class GetUserTeamHandler implements BaseHandler {
 
     private final StringMapper mapper;
 
+    private final UserTeamService userTeamService;
+
     @Autowired
-    public GetUserTeamHandler(StringMapper mapper) {
+    public GetUserTeamHandler(StringMapper mapper, UserTeamService userTeamService) {
         this.mapper = mapper;
+        this.userTeamService = userTeamService;
     }
 
     @Override
     public String handle(Map<String, Object> request) throws JsonProcessingException {
         String userId = (String) request.get("userId");
+        Optional<UserTeam> userTeamOptional = userTeamService.getByExtId(userId);
 
         Map<String, Object> resultMap = new LinkedHashMap<>();
         resultMap.put("userId", userId);
-        resultMap.put("teamId", 1);
-        resultMap.put("teamRank", 1);
-        resultMap.put("teamName", "鳩屋ぐぐぐ");
+        if (userTeamOptional.isPresent()) {
+            UserTeam userTeam = userTeamOptional.get();
+            if (userTeam.getTeamName().isEmpty()) {
+                resultMap.put("teamId", 0);
+                resultMap.put("teamRank", 0);
+                resultMap.put("teamName", "");
+            } else {
+                resultMap.put("teamId", 1);
+                resultMap.put("teamRank", 1);
+                resultMap.put("teamName", userTeam.getTeamName());
+            }
+        } else {
+            resultMap.put("teamId", 1);
+            resultMap.put("teamRank", 1);
+            resultMap.put("teamName", "鳩屋ぐぐぐ");
+        }
         resultMap.put("userTeamPoint", 114514);
 
         String json = mapper.write(resultMap);
diff --git a/src/main/java/icu/samnyan/aqua/sega/chunithm/model/userdata/UserTeam.java b/src/main/java/icu/samnyan/aqua/sega/chunithm/model/userdata/UserTeam.java
new file mode 100644
index 0000000..2f30df7
--- /dev/null
+++ b/src/main/java/icu/samnyan/aqua/sega/chunithm/model/userdata/UserTeam.java
@@ -0,0 +1,38 @@
+package icu.samnyan.aqua.sega.chunithm.model.userdata;
+
+import com.fasterxml.jackson.annotation.JsonIgnore;
+import lombok.AllArgsConstructor;
+import lombok.Data;
+import lombok.NoArgsConstructor;
+
+import javax.persistence.*;
+import java.io.Serializable;
+
+/**
+ * @author samnyan (privateamusement@protonmail.com)
+ */
+@Entity(name = "ChuniUserTeam")
+@Table(name = "chuni_user_team")
+@Data
+@NoArgsConstructor
+@AllArgsConstructor
+public class UserTeam implements Serializable {
+
+    private static final long serialVersionUID = 1L;
+
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    @JsonIgnore
+    private long id;
+
+    @JsonIgnore
+    @ManyToOne
+    @JoinColumn(name = "user_id")
+    private UserData user;
+
+    private String teamName;
+
+    public UserTeam(UserData userData) {
+        user = userData;
+    }
+}
diff --git a/src/main/java/icu/samnyan/aqua/sega/chunithm/service/UserTeamService.java b/src/main/java/icu/samnyan/aqua/sega/chunithm/service/UserTeamService.java
new file mode 100644
index 0000000..22385c7
--- /dev/null
+++ b/src/main/java/icu/samnyan/aqua/sega/chunithm/service/UserTeamService.java
@@ -0,0 +1,31 @@
+package icu.samnyan.aqua.sega.chunithm.service;
+
+import icu.samnyan.aqua.sega.chunithm.dao.userdata.UserTeamRepository;
+import icu.samnyan.aqua.sega.chunithm.model.userdata.UserData;
+import icu.samnyan.aqua.sega.chunithm.model.userdata.UserTeam;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+import java.util.Optional;
+
+/**
+ * @author samnyan (privateamusement@protonmail.com)
+ */
+@Service
+public class UserTeamService {
+
+    private final UserTeamRepository userTeamRepository;
+
+    @Autowired
+    public UserTeamService(UserTeamRepository userTeamRepository) {
+        this.userTeamRepository = userTeamRepository;
+    }
+
+    public Optional<UserTeam> getByUser(UserData user) {
+        return userTeamRepository.findByUser(user);
+    }
+
+    public Optional<UserTeam> getByExtId(String userId) {
+        return userTeamRepository.findByUser_Card_ExtId(Integer.parseInt(userId));
+    }
+}
diff --git a/src/main/resources/db/migration/mysql/V24__chuni_user_team.sql b/src/main/resources/db/migration/mysql/V24__chuni_user_team.sql
new file mode 100644
index 0000000..bebe975
--- /dev/null
+++ b/src/main/resources/db/migration/mysql/V24__chuni_user_team.sql
@@ -0,0 +1,19 @@
+
+CREATE TABLE `chuni_user_team`
+(
+    `id`                    bigint(20) NOT NULL,
+    `team_name`             varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
+    `user_id`               bigint(20)                              DEFAULT NULL
+) ENGINE = InnoDB
+  DEFAULT CHARSET = utf8mb4
+  COLLATE = utf8mb4_unicode_ci;
+
+ALTER TABLE `chuni_user_team`
+    ADD PRIMARY KEY (`id`),
+    ADD KEY `FKiy45laxv2h8sdbjr4i59nwa41` (`user_id`);
+
+ALTER TABLE `chuni_user_team`
+    MODIFY `id` bigint(20) NOT NULL AUTO_INCREMENT;
+
+ALTER TABLE `chuni_user_team`
+    ADD CONSTRAINT `FKiy45laxv2h8sdbjr4i59nwa41` FOREIGN KEY (`user_id`) REFERENCES `chuni_user_data` (`id`);
diff --git a/src/main/resources/db/migration/sqlite/V24__chuni_user_team.sql b/src/main/resources/db/migration/sqlite/V24__chuni_user_team.sql
new file mode 100644
index 0000000..a7040a3
--- /dev/null
+++ b/src/main/resources/db/migration/sqlite/V24__chuni_user_team.sql
@@ -0,0 +1,10 @@
+-- Table: chuni_user_data_ex
+CREATE TABLE chuni_user_team
+(
+    id                    INTEGER,
+    team_name             VARCHAR(255),
+    user_id               BIGINT REFERENCES chuni_user_data (id) ON DELETE CASCADE,
+    PRIMARY KEY (
+                 id
+        )
+);
-- 
GitLab

